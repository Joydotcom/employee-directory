{"version":3,"sources":["utils/API.js","components/Table.js","components/Data.js","components/Wrapper.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","props","console","log","userData","users","map","user","name","first","className","Data","state","filteredUsers","API","then","res","holdData","data","results","setState","this","Component","Wrapper","children","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2SAEe,EACD,WACN,OAAOA,IAAMC,IAAI,iD,OCkBVC,MAlBf,SAAeC,GACbC,QAAQC,IAAIF,GAEZ,IAAMG,EAAWH,EAAMI,MAAMC,KAAI,SAACC,GAChC,OAAO,8BAAMA,EAAKC,KAAKC,WAGzB,OADAP,QAAQC,IAAI,gDAAiDC,GAE3D,qBAAKM,UAAU,YAAf,SACGN,KCOcO,E,4MAEnBC,MAAQ,CACNP,MAAO,GACPQ,cAAe,I,uDAGjB,WAAqB,IAAD,OAElBC,IAAeC,MAAK,SAACC,GAEnB,IAAMC,EAAWD,EAAIE,KAAKC,QAAQb,KAAI,SAACC,GACrC,OAAOA,KAET,EAAKa,SAAS,CACZf,MAAOY,IAETf,QAAQC,IAAI,EAAKS,MAAMP,Y,oBAI3B,WACE,OACE,qBAAKK,UAAU,YAAf,SACE,cAAC,EAAD,CAAOL,MAAOgB,KAAKT,MAAMP,c,GAxBCiB,a,MCdnBC,MAHf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OAAO,qBAAKd,UAAU,UAAf,SAA0Bc,KCDdC,G,kKACjB,WACI,OACI,sBAAKf,UAAU,SAAf,UACA,qDACA,yE,GALwBY,c,MCerBI,MAXf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAIjDX,M","file":"static/js/main.46c5359e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n    }\n};","\nimport React from \"react\";\n// import Data from \"./Data\";\n\nfunction Table(props) {\n  console.log(props);\n  // The data was coming in with the error because I didn't wrap it in JSX.\n  const userData = props.users.map((user) => {\n    return <div>{user.name.first}</div>;\n  });\n  console.log(\"This is the userData after returning as a div\", userData);\n  return (\n    <div className=\"container\">\n      {userData}\n      {/* You can run the function above inside the return as a jsx expression or do a function call above  */}\n      {/* {props.users.map((user) => {\n\t\t\t\treturn <div>{user.name.first}</div>;\n\t\t\t})} */}\n    </div>\n  );\n}\n\nexport default Table;","// import React, { Component } from \"react\";\n// import Data from \"./Data\";\n\n\n// export default class data extends Component {\n//   render() {\n//     return (\n//       <>\n//         <Data />\n//       </>\n//     );\n//   }\n// }\n\n\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Table from \"./Table\";\n// import Nav from \"./Nav\";\n\nexport default class Data extends Component {\n  // I am now considering the Body to be the parent component of my children later on.\n  state = {\n    users: [],\n    filteredUsers: [],\n  };\n\n  componentDidMount() {\n    // Mount the data to run after this component renders to the page\n    API.getUsers().then((res) => {\n      // Mapped through it because this is the value I wanted to hold, not really needed at this point honestly.\n      const holdData = res.data.results.map((user) => {\n        return user;\n      });\n      this.setState({\n        users: holdData,\n      });\n      console.log(this.state.users);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Table users={this.state.users} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../style/Wrapper.css\";\n\nfunction Wrapper({ children }) {\n  return <div className=\"wrapper\">{children}</div>;\n}\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"../style/Header.css\";\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n            <h1> Employee Directory</h1>\n            <p> Click to flip through or search.</p>\n            </div>\n        )\n    }\n};","import React from \"react\";\nimport Data from \"./components/Data\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Data />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}